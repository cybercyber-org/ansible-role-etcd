---
- name: "get arch name"
  set_fact:
    etcd_arch: amd64
  when: ansible_architecture == "x86_64"
- name: "get arch name"
  set_fact:
    etcd_arch: arm64
  when: ansible_architecture == "aarch64"
- name: "download etcd"
  get_url:
    url: "https://github.com/etcd-io/etcd/releases/download/v{{ etcd_version }}/etcd-v{{ etcd_version }}-linux-{{ etcd_arch }}.tar.gz"
    dest: "/tmp/etcd-v{{ etcd_version }}-linux-{{ etcd_arch }}.tar.gz"
- name: "unpack etcd"
  unarchive:
    remote_src: yes
    src: "/tmp/etcd-v{{ etcd_version }}-linux-{{ etcd_arch }}.tar.gz"
    dest: /tmp/
- name: "copy etcd"
  copy:
    remote_src: yes
    src: "/tmp/etcd-v{{ etcd_version }}-linux-{{ etcd_arch }}/{{ item }}"
    dest: /usr/local/bin/
    mode: '0755'
  loop:
    - etcd
    - etcdctl
- name: "create LV for etcd"
  community.general.lvol:
    vg: "{{ vg }}"
    lv: etcd
    size: 2G
- name: "create filesystem for etcd"
  community.general.filesystem:
    fstype: ext4
    dev: "/dev/{{ vg }}/etcd"
- name: "mount filesystem for etcd"
  ansible.posix.mount:
    path: /srv/etcd
    src: "/dev/{{ vg }}/etcd"
    fstype: ext4
    opts: auto
    state: mounted
- name: "chmod etcd-data"
  file:
    path: /srv/etcd
    mode: '0700'
    state: directory
- name: "create etcd-service"
  template:
    src: files/etcd.service.template
    dest: /etc/systemd/system/etcd.service
- name: "start etcd"
  systemd:
    daemon_reload: yes
    name: etcd
    enabled: yes
    state: started
